{
    "swagger": "2.0",
    "info": {
        "description": "This is the API server for the Computer Alchemy game.",
        "title": "Computer Alchemy API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api",
    "paths": {
        "/combinations": {
            "get": {
                "description": "Returns a list of all combinations",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "combinations"
                ],
                "summary": "Get all combinations",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Element name",
                        "name": "element",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.CombinationResponse"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Combines two elements and returns the resulting element",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "combinations"
                ],
                "summary": "Combine elements",
                "parameters": [
                    {
                        "description": "Elements to combine",
                        "name": "combination",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CombinationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Element"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid combination",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/combinations/result": {
            "get": {
                "description": "Returns a list of all combinations for a resulting element",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "combinations"
                ],
                "summary": "Get all combinations for a resulting element",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Resulting element name",
                        "name": "resultingElement",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.CombinationResponse"
                            }
                        }
                    }
                }
            }
        },
        "/elements": {
            "get": {
                "description": "Returns a list of all elements in the game",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "elements"
                ],
                "summary": "Get all available elements",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Element"
                            }
                        }
                    }
                }
            }
        },
        "/elements/{name}": {
            "get": {
                "description": "Returns a specific element by its name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "elements"
                ],
                "summary": "Get element by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Element name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Element"
                        }
                    },
                    "404": {
                        "description": "Element not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.CombinationRequest": {
            "type": "object",
            "properties": {
                "first_element": {
                    "type": "string"
                },
                "second_element": {
                    "type": "string"
                }
            }
        },
        "dto.CombinationResponse": {
            "type": "object",
            "properties": {
                "firstElement": {
                    "$ref": "#/definitions/models.Element"
                },
                "resultingElement": {
                    "$ref": "#/definitions/models.Element"
                },
                "secondElement": {
                    "$ref": "#/definitions/models.Element"
                }
            }
        },
        "models.Element": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    }
}